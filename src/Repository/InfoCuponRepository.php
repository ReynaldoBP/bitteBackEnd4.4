<?php

namespace App\Repository;
use Doctrine\ORM\Query\ResultSetMappingBuilder;
/**
 * InfoCuponRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InfoCuponRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Documentación para la función 'getCupon'.
     *
     * Método encargado de retornar todos los detalles de los cupones según los parámetros enviados.
     * 
     * @author Kevin Baque
     * @version 1.0 27-08-2021
     * 
     * @return array  $arrayResultado
     * 
     */
    public function getCupon($arrayParametros)
    {
        $strIdCupon          = $arrayParametros['strIdCupon']          ? $arrayParametros['strIdCupon']:'';
        $strDescripcionTipo  = $arrayParametros['strDescripcionTipo']  ? $arrayParametros['strDescripcionTipo']:'';
        $strVerCuponAsignado = $arrayParametros['strVerCuponAsignado'] ? $arrayParametros['strVerCuponAsignado']:'';
        $arrayResultado      = array();
        $objRsmBuilder       = new ResultSetMappingBuilder($this->_em);
        $objQuery            = $this->_em->createNativeQuery(null, $objRsmBuilder);
        $strEstadoActivo     = 'ACTIVO';
        $strMensajeError     = '';
        $strSelect           = '';
        $strFrom             = '';
        $strWhere            = '';
        $strOrderBy          = '';
        try
        {
            $strSelect  = " SELECT 
                            IC.ID_CUPON,
                            IC.CUPON AS DESCRIPCION,
                            ATC.ID_TIPO_CUPON,
                            CONCAT(UPPER(LEFT(REPLACE(ATC.DESCRIPCION,'_',' '), 1)), LOWER(SUBSTRING(REPLACE(ATC.DESCRIPCION,'_',' '), 2))) AS TIPO_CUPON,
                            IC.VALOR,
                            IC.PRECIO,
                            IC.DIA_VIGENTE,
                            IC.IMAGEN,
                            IC.ESTADO,
                            IFNULL(
                                    (SELECT IRES.NOMBRE_COMERCIAL
                                    FROM INFO_CUPON_RESTAURANTE ICR
                                    JOIN INFO_RESTAURANTE IRES ON IRES.ID_RESTAURANTE = ICR.RESTAURANTE_ID
                                    WHERE ICR.CUPON_ID=IC.ID_CUPON
                                    ),'') AS RESTAURANTE,
                            IFNULL(
                                    (SELECT IRES.ID_RESTAURANTE
                                    FROM INFO_CUPON_RESTAURANTE ICR
                                    JOIN INFO_RESTAURANTE IRES ON IRES.ID_RESTAURANTE = ICR.RESTAURANTE_ID
                                    WHERE ICR.CUPON_ID=IC.ID_CUPON
                                    ),'') AS ID_RESTAURANTE,
                            IC.FE_CREACION ";
            $strFrom    = " FROM INFO_CUPON IC
                            JOIN ADMI_TIPO_CUPON ATC ON ATC.ID_TIPO_CUPON = IC.TIPO_CUPON_ID ";
            $strWhere   = " WHERE ATC.ESTADO = :strEstadoActivo ";
            $strOrderBy = " ORDER BY IC.FE_CREACION DESC ";
            $objQuery->setParameter("strEstadoActivo", $strEstadoActivo);
            if(!empty($strIdCupon))
            {
                $strWhere .= " AND IC.ID_CUPON = :strIdCupon ";
                $objQuery->setParameter("strIdCupon", $strIdCupon);
            }
            if(!empty($strDescripcionTipo))
            {
                $strWhere .= " AND lower(ATC.DESCRIPCION) like lower(:strDescripcionTipo) ";
                $objQuery->setParameter("strDescripcionTipo", '%' . trim($strDescripcionTipo) . '%');
            }
            if(!empty($strVerCuponAsignado))
            {
                $strWhere .= " AND IC.ID_CUPON NOT IN (SELECT CUPON_ID FROM INFO_CUPON_PROMOCION WHERE ESTADO=:strEstadoActivo) ";
                $objQuery->setParameter("strEstadoActivo", $strEstadoActivo);
            }
            $objRsmBuilder->addScalarResult('ID_CUPON'       , 'strIdCupon'       , 'string');
            $objRsmBuilder->addScalarResult('DESCRIPCION'    , 'strDescripcion'   , 'string');
            $objRsmBuilder->addScalarResult('ID_TIPO_CUPON'  , 'strIdTipoCupon'   , 'string');
            $objRsmBuilder->addScalarResult('TIPO_CUPON'     , 'strTipoCupon'     , 'string');
            $objRsmBuilder->addScalarResult('VALOR'          , 'strValor'         , 'string');
            $objRsmBuilder->addScalarResult('PRECIO'         , 'strPrecio'        , 'string');
            $objRsmBuilder->addScalarResult('DIA_VIGENTE'    , 'strDiaVigente'    , 'string');
            $objRsmBuilder->addScalarResult('IMAGEN'         , 'strImagen'        , 'string');
            $objRsmBuilder->addScalarResult('ESTADO'         , 'strEstado'        , 'string');
            $objRsmBuilder->addScalarResult('ID_RESTAURANTE' , 'strIdRestaurante' , 'string');
            $objRsmBuilder->addScalarResult('RESTAURANTE'    , 'strRestaurante'   , 'string');
            $objRsmBuilder->addScalarResult('FE_CREACION'    , 'strFeCreacion'    , 'string');
            $strSql  = $strSelect.$strFrom.$strWhere.$strOrderBy;
            $objQuery->setSQL($strSql);
            $arrayResultado['resultados'] = $objQuery->getResult();
        }
        catch(\Exception $ex)
        {
            $strMensajeError = $ex->getMessage();
        }
        $arrayResultado['error'] = $strMensajeError;
        return $arrayResultado;
    }
}
